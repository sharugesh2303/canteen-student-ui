import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import Navbar from '../components/Navbar';
import axios from 'axios';
import { FaHistory, FaCheckCircle, FaTruck, FaMoneyBillWave, FaChevronRight } from 'react-icons/fa';

// --- CONFIGURATION ---
// ðŸ”‘ FIX: Ensuring this page uses the definitive backend URL too.
const API_BASE_URL = 'https://jj-canteen-backend-jakh.onrender.com/api'; 

// Helper function for Authorization Header
const getAuthHeaders = (token) => ({
Â  Â  'Authorization': `Bearer ${token}`
});

// --- Order Card Component (Unchanged) ---
const OrderCard = ({ order, orderIndex }) => {
// ... (OrderCard code remains the same as previously provided)
Â  Â  let statusIcon, statusColor;
Â  Â  const status = order.status.toLowerCase();

Â  Â  switch (status) {
Â  Â  Â  Â  case 'delivered':
Â  Â  Â  Â  Â  Â  statusIcon = <FaCheckCircle size={16} />; 
Â  Â  Â  Â  Â  Â  statusColor = 'text-green-400 bg-green-900/50';
Â  Â  Â  Â  Â  Â  break;
Â  Â  Â  Â  case 'ready':
Â  Â  Â  Â  Â  Â  statusIcon = <FaTruck size={16} />; 
Â  Â  Â  Â  Â  Â  statusColor = 'text-orange-400 bg-orange-900/50';
Â  Â  Â  Â  Â  Â  break;
Â  Â  Â  Â  case 'pending':
Â  Â  Â  Â  Â  Â  statusIcon = <FaMoneyBillWave size={16} />;
Â  Â  Â  Â  Â  Â  statusColor = 'text-blue-400 bg-blue-900/50';
Â  Â  Â  Â  Â  Â  break;
Â  Â  Â  Â  case 'paid':
Â  Â  Â  Â  default:
Â  Â  Â  Â  Â  Â  statusIcon = <FaMoneyBillWave size={16} />;
Â  Â  Â  Â  Â  Â  statusColor = 'text-yellow-400 bg-yellow-900/50';
Â  Â  Â  Â  Â  Â  break;
Â  Â  }

Â  Â  const orderDate = new Date(order.orderDate).toLocaleString('en-IN', {
Â  Â  Â  Â  dateStyle: 'medium',
Â  Â  Â  Â  timeStyle: 'short',
Â  Â  });

Â  Â  return (
Â  Â  Â  Â  <Link 
Â  Â  Â  Â  Â  Â  to={`/order-details/${order._id}`} 
Â  Â  Â  Â  Â  Â  state={{ order: order }} // Pass full order object for immediate display on next page
Â  Â  Â  Â  Â  Â  className="block" 
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <div className="bg-slate-700 p-6 rounded-xl shadow-md cursor-pointer 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  transition-all duration-300 hover:shadow-xl hover:shadow-orange-500/30 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  hover:-translate-y-0.5 active:scale-[0.98] border border-slate-600">
Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex justify-between items-start">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-lg font-semibold text-orange-400">Bill No: {order.billNumber || order.orderId}</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-2xl font-bold text-slate-100 mt-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  â‚¹{order.totalAmount ? order.totalAmount.toFixed(2) : '0.00'}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-slate-400 mt-1">{orderDate}</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-right flex flex-col items-end space-y-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className={`px-3 py-1 text-sm font-semibold uppercase rounded-full flex items-center gap-1 ${statusColor}`}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {status} {statusIcon}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-slate-400 text-base mt-1 flex items-center">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â View Details <FaChevronRight size={12} className='ml-1' />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  <div className="border-t border-slate-600 mt-4 pt-3">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h4 className="font-semibold text-slate-300 mb-2 text-lg">Items Summary:</h4>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ul className="text-slate-400 text-base flex flex-wrap gap-x-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {order.items.slice(0, 3).map((item, i) => ( 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <li key={i} className="truncate">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {item.name} (x{item.quantity})
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {order.items.length > 3 && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <li className="text-slate-500">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  + {order.items.length - 3} more
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </ul>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </Link>
Â  Â  );
};


const OrderHistoryPage = () => {
Â  Â  const [orders, setOrders] = useState([]);
Â  Â  const [loading, setLoading] = useState(true);
Â  Â  const [error, setError] = useState(null);
Â  Â  const [isCanteenOpen, setIsCanteenOpen] = useState(true); 
Â  Â  const navigate = useNavigate();
Â  Â  
Â  Â  const historyIcon = <FaHistory size={30} className="inline text-orange-400 ml-3 mb-1" />;

Â  Â  const fetchCanteenStatus = async () => {
Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  // Using hardcoded API_BASE_URL
Â  Â  Â  Â  Â  Â  const statusRes = await axios.get(`${API_BASE_URL}/canteen-status/public`); 
Â  Â  Â  Â  Â  Â  setIsCanteenOpen(statusRes.data.isOpen);
Â  Â  Â  Â  Â  Â  return statusRes.data.isOpen;
Â  Â  Â  Â  } catch (err) {
Â  Â  Â  Â  Â  Â  console.warn("Could not fetch canteen status for HistoryPage.");
Â  Â  Â  Â  Â  Â  setIsCanteenOpen(false); 
Â  Â  Â  Â  Â  Â  return false;
Â  Â  Â  Â  }
Â  Â  };

Â  Â  const fetchOrderHistory = async () => {
Â  Â  Â  Â  const token = localStorage.getItem('token');
Â  Â  Â  Â  if (!token) {
Â  Â  Â  Â  Â  Â  navigate('/login');
Â  Â  Â  Â  Â  Â  return;
Â  Â  Â  Â  }

Â  Â  Â  Â  const isOpen = await fetchCanteenStatus();
Â  Â  Â  Â  if (!isOpen) { 
Â  Â  Â  Â  Â  Â  setLoading(false);
Â  Â  Â  Â  Â  Â  return;
Â  Â  Â  Â  }

Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  // Using hardcoded API_BASE_URL and Bearer token headers
Â  Â  Â  Â  Â  Â  const response = await axios.get(`${API_BASE_URL}/orders/my-history`, {
Â  Â  Â  Â  Â  Â  Â  Â  headers: getAuthHeaders(token),
Â  Â  Â  Â  Â  Â  });

Â  Â  Â  Â  Â  Â  // Axios automatically parses JSON and checks for 2xx status codes.
Â  Â  Â  Â  Â  Â  setOrders(response.data);

Â  Â  Â  Â  } catch (err) {
Â  Â  Â  Â  Â  Â  if (err.response && err.response.status === 401) {
Â  Â  Â  Â  Â  Â  Â  Â  Â // Handle session expiration specifically
Â  Â  Â  Â  Â  Â  Â  Â  localStorage.clear();
Â  Â  Â  Â  Â  Â  Â  Â  alert('Your session expired. Please log in again.');
Â  Â  Â  Â  Â  Â  Â  Â  navigate('/login');
Â  Â  Â  Â  Â  Â  } else if (err.response && err.response.data && err.response.data.message) {
Â  Â  Â  Â  Â  Â  Â  Â  Â setError(err.response.data.message);
Â  Â  Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  Â  Â  Â setError('Failed to fetch order history. Check backend connection.');
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  } finally {
Â  Â  Â  Â  Â  Â  setLoading(false);
Â  Â  Â  Â  }
Â  Â  };


Â  Â  useEffect(() => {
Â  Â  Â  Â  fetchOrderHistory();

Â  Â  Â  Â  // Polling status and history periodically
Â  Â  Â  Â  const interval = setInterval(fetchOrderHistory, 30000); 
Â  Â  Â  Â  return () => clearInterval(interval);

Â  Â  }, [navigate]);

Â  Â  return (
Â  Â  Â  Â  <div className="bg-slate-900 min-h-screen font-sans">
Â  Â  Â  Â  Â  Â  <Navbar />
Â  Â  Â  Â  Â  Â  <main className="container mx-auto p-4 md:p-8">
Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  {/* Header outside the main card */}
Â  Â  Â  Â  Â  Â  Â  Â  <h1 className="text-4xl font-extrabold text-slate-100 mb-8 flex items-center">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Your Order History {historyIcon}
Â  Â  Â  Â  Â  Â  Â  Â  </h1>
Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  {/* CONDITIONAL RENDERING BASED ON STATUS */}
Â  Â  Â  Â  Â  Â  Â  Â  {!isCanteenOpen ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="bg-slate-800 p-6 rounded-xl shadow-2xl max-w-5xl mx-auto border border-slate-700 text-center py-20">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h2 className="text-4xl font-extrabold text-red-400 mb-4">Canteen is CLOSED â›”</h2>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl text-slate-400">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  You cannot view history when the canteen is closed.
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/dashboard" className="mt-6 inline-block bg-orange-500 text-white font-bold py-3 px-8 rounded-lg hover:bg-orange-600 transition-all transform hover:scale-105 active:scale-95 shadow-md shadow-orange-500/30">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  View Dashboard Status
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="bg-slate-800 p-6 rounded-xl shadow-2xl max-w-5xl mx-auto border border-slate-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {loading && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-center py-10 font-semibold text-slate-400 flex justify-center items-center space-x-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <svg className="animate-spin h-6 w-6 text-orange-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </svg>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>Loading your orders...</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {!loading && error && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-center bg-slate-700/50 p-10 rounded-lg shadow border border-red-500">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl text-red-400">Error: Failed to load order history.</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-slate-400 mt-2">{error}</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {!loading && !error && orders.length === 0 ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-center bg-slate-700/50 p-10 rounded-lg shadow border border-dashed border-slate-600">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl text-slate-400 mb-4">You haven't placed any orders yet.</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/dashboard" className="inline-block bg-orange-500 text-white font-bold py-3 px-8 rounded-lg transition-all hover:bg-orange-600 active:scale-95 text-lg">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Start Shopping
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="space-y-4">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {orders.map((order, index) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <OrderCard 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={order._id || index} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  order={order} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  orderIndex={index}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </main>
Â  Â  Â  Â  </div>
Â  Â  );
};

export default OrderHistoryPage;